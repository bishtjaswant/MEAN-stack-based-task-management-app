{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/task/task.component.ts","./src/app/components/task/task.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-task/add-task.component.ts","./src/app/components/add-task/add-task.component.html","./src/app/components/add-task/add-task-model.component.html","./src/app/services/task.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { TaskModel } from './../../classes/task';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { TaskService } from 'src/app/services/task.service';\nimport {ThemePalette} from '@angular/material/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements AfterViewInit, OnInit {\n\n  displayedColumns: string[] = ['title', 'updatedAt','isCompleted','action'];\n  dataSource! : MatTableDataSource<TaskModel>;\n\n\n  //slide toggle\n  color: ThemePalette = 'accent';\n  checked = false;\n  disabled = false;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n\n\n\n\n\n  constructor(\n    private taskService:TaskService,\n    private _snackBar: MatSnackBar\n\n    ) {}\n\n  ngOnInit(){\n    this .fetchAllTaskList();\n  }\n\n  ngAfterViewInit() {\n  }\n\n\n  /**\n   * fetchAllTaskList\n   */\n  public fetchAllTaskList() {\n    this.taskService.getTasks.subscribe(\n      tasks=> {\n           if (!tasks) {\n             return;\n           }\n\n            this.dataSource = new MatTableDataSource<TaskModel>(tasks);\n            this.dataSource.paginator = this.paginator;\n      }\n    );\n  }\n  /**\n   * render\n   */\n  public render() {\n    this.fetchAllTaskList();\n  }\n\n\n  public changeStatus(task:TaskModel){\n\n    this.taskService.changeStatus(task).subscribe(\n      message =>{\n\n           this._snackBar.open(message, 'close', {\n            duration: 2000,\n          });\n\n\n      }\n    )\n\n  }\n\n  public deleteTask(task:TaskModel) {\n\n      this.taskService.deleteTask(task)\n    .subscribe(\n      resp=>{\n         this.fetchAllTaskList();\n        this._snackBar.open(resp.msg,\"close\",{\n          duration:1000,\n        });\n      }\n    )\n  }\n\n}\n\n","<div class=\"container\">\n\n  <h2 class=\"text-center\">mean stack development With jaswant</h2>\n\n  <div class=\"row\">\n    <div class=\"col-md-8 offset-md-2\">\n\n      <app-add-task (addTaskEvent) = \"render()\"></app-add-task>\n\n      <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\">\n          <!-- Position Column -->\n          <ng-container matColumnDef=\"title\">\n            <th mat-header-cell *matHeaderCellDef> title </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"isCompleted\">\n            <th mat-header-cell *matHeaderCellDef> isCompleted </th>\n            <td mat-cell *matCellDef=\"let element\">   <mat-slide-toggle\n          (change) = \"changeStatus(element)\" [checked]=\"element.isCompleted\">Slide me!</mat-slide-toggle>            </td>\n          </ng-container>\n\n          <!-- Weight Column -->\n          <ng-container matColumnDef=\"updatedAt\">\n            <th mat-header-cell *matHeaderCellDef> updatedAt </th>\n\n            <td mat-cell *matCellDef=\"let element\"> {{element.updatedAt| date}} </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"action\">\n              <th mat-header-cell  *matHeaderCellDef >action</th>\n              <td  mat-cell *matCellDef=\"let element\" >\n\n                <button (click)=\"deleteTask(element)\" mat-raised-button color=\"accent\">Delete</button> </td>\n          </ng-container>\n\n\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n\n        <mat-paginator [pageSizeOptions]=\"[5,10,20]\" showFirstLastButtons></mat-paginator>\n      </div>\n\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ng11MeanStack';\n}\n","\n<app-task></app-task>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TaskComponent } from './components/task/task.component';\n\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTableModule} from '@angular/material/table';\nimport {   MatPaginatorModule } from '@angular/material/paginator';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TaskService } from './services/task.service';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { AddTaskComponent, AddTaskDialogComponent } from './components/add-task/add-task.component';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskComponent,\n    AddTaskComponent,\n    AddTaskDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    HttpClientModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatFormFieldModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatInputModule,\n    FormsModule\n  ],\n  providers: [\n    TaskService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { MatSnackBar } from '@angular/material/snack-bar';\nimport { TaskService } from 'src/app/services/task.service';\nimport { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { TaskModel } from '../../classes/task';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css']\n})\nexport class AddTaskComponent implements OnInit {\n\n  public title:string='';\n  public isCompleted:boolean=false;\n\n  @Output() addTaskEvent= new EventEmitter<boolean>();\n\n  constructor(\n    private dialog:MatDialog    ) { }\n\n  ngOnInit(): void {\n  }\n\n  openTasdkDialog(){\n   const dialogRef= this.dialog.open(AddTaskDialogComponent, {\n    width:\"500px\",\n     data:{title:this.title,isCompleted:this.isCompleted}\n   });\n\n   dialogRef.afterClosed().subscribe(result=>{\n     console.log('dialog closed');\n      if (result===true) {\n        this.addTaskEvent.emit(true);\n      }\n\n   });\n\n\n  }\n\n\n\n}\n\n\n@Component({\n  selector: 'app-add-task-dialog',\n  templateUrl: './add-task-model.component.html',\n})\nexport class AddTaskDialogComponent  {\n  constructor(\n    public dialogRef: MatDialogRef<AddTaskDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: TaskModel,\n    private taskService:TaskService,\n    private snackBar:MatSnackBar ) {}\n\n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n\n    public addTask(task:TaskModel) {\n      this.taskService.addTask(task).subscribe(\n        resp=>{\n          this.dialogRef.close(true);\n          this.snackBar.open(resp.msg,\"close\",{\n            duration:1000,\n          });\n\n        }\n      )\n    }\n\n}\n\n","    <button mat-raised-button color=\"primary\" (click)=\"openTasdkDialog()\">Add new task</button>\n\n","<h1 mat-dialog-title>Add new task</h1>\r\n<div mat-dialog-content>\r\n  <p>What's your title task?</p>\r\n  <mat-form-field>\r\n    <mat-label>write your task title </mat-label>\r\n    <input matInput required #title=\"ngModel\" name=\"title\" minlength='5' [(ngModel)]=\"data.title\">\r\n  </mat-form-field>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-raised-button color='basic' (click)=\"onNoClick()\">Cancel</button>\r\n  <button mat-raised-button color='primary' [disabled]=\"!title.valid\" (click)=\"addTask(data)\" >Add Task</button>\r\n</div>\r\n","import { TaskModel } from './../classes/task';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nconst API=\"http://localhost:3000/api/task\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n\n\n  deleteTask(task: TaskModel):Observable<any> {\n    return  this.http.delete<any>(`${API}/${task._id}`);\n\n  }\n\n  constructor(private http:HttpClient) { }\n\n  public get getTasks() : Observable<TaskModel []> {\n    return this.http.get<TaskModel[]>(`${API}`);\n  }\n\n  public  changeStatus(task:TaskModel): Observable<string> {\n    task.isCompleted= !task.isCompleted;\n    return this.http.put<string>(`${API}/${task._id}`,task);\n  }\n\n  public addTask(task:TaskModel):Observable<any>{\n    return this.http.post<any>(`${API}/newtask`,task, {\n      headers:new  HttpHeaders().append(\"Content-Type\",\"application/json\")\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}